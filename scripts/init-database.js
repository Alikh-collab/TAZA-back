import { query } from "../config/database.js"
import bcrypt from "bcryptjs"

async function initDatabase() {
  try {
    console.log("üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö TAZA SU...")

    // –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç–∞–±–ª–∏—Ü—ã
    console.log("üìù –£–¥–∞–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ç–∞–±–ª–∏—Ü...")
    await query("DROP TABLE IF EXISTS complaints CASCADE")
    await query("DROP TABLE IF EXISTS updates CASCADE")
    await query("DROP TABLE IF EXISTS users CASCADE")

    // –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    console.log("üë• –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
    await query(`
      CREATE TABLE users (
        id SERIAL PRIMARY KEY,
        name VARCHAR(255) NOT NULL,
        email VARCHAR(255) UNIQUE NOT NULL,
        password VARCHAR(255) NOT NULL,
        phone VARCHAR(20),
        avatar_url TEXT,
        role VARCHAR(50) DEFAULT 'user' CHECK (role IN ('user', 'admin')),
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
      )
    `)

    // –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –∂–∞–ª–æ–±
    console.log("üìã –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –∂–∞–ª–æ–±...")
    await query(`
      CREATE TABLE complaints (
        id SERIAL PRIMARY KEY,
        user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
        name VARCHAR(255) NOT NULL,
        location_lat DECIMAL(10, 8) NOT NULL CHECK (location_lat BETWEEN -90 AND 90),
        location_lng DECIMAL(11, 8) NOT NULL CHECK (location_lng BETWEEN -180 AND 180),
        location_address TEXT,
        description TEXT NOT NULL,
        photo_url TEXT,
        status VARCHAR(50) DEFAULT 'pending' CHECK (status IN ('pending', 'in_progress', 'resolved')),
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
      )
    `)
    // –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã updates
    console.log("–°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã updates...")
    await query(`
      CREATE TABLE updates (
        id SERIAL PRIMARY KEY,
        title VARCHAR(255) NOT NULL,
        description TEXT NOT NULL,
        created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
      )
    `)

    // –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
    console.log("üîç –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–æ–≤...")
    await query("CREATE INDEX idx_users_email ON users(email)")
    await query("CREATE INDEX idx_users_role ON users(role)")
    await query("CREATE INDEX idx_complaints_user_id ON complaints(user_id)")
    await query("CREATE INDEX idx_complaints_status ON complaints(status)")
    await query("CREATE INDEX idx_complaints_location ON complaints(location_lat, location_lng)")
    await query("CREATE INDEX idx_complaints_created_at ON complaints(created_at)")

    // –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    console.log("üë§ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...")
    const hashedAdminPassword = await bcrypt.hash("admin123", 12)
    await query("INSERT INTO users (name, email, password, role) VALUES ($1, $2, $3, $4)", [
      "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä TAZA SU",
      "admin@tazasu.kz",
      hashedAdminPassword,
      "admin",
    ])

    // –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log("üë§ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
    const hashedUserPassword = await bcrypt.hash("user123", 12)
    await query("INSERT INTO users (name, email, password, phone, role) VALUES ($1, $2, $3, $4, $5)", [
      "–¢–µ—Å—Ç–æ–≤—ã–π –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
      "user@test.com",
      hashedUserPassword,
      "+7 777 123 4567",
      "user",
    ])

    // –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const adminUser = await query("SELECT id FROM users WHERE email = $1", ["admin@tazasu.kz"])
    const testUser = await query("SELECT id FROM users WHERE email = $1", ["user@test.com"])

    const adminId = adminUser[0].id
    const userId = testUser[0].id

    // –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∂–∞–ª–æ–±
    console.log("üìù –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∂–∞–ª–æ–±...")
    const testComplaints = [
      {
        user_id: userId,
        name: "–ê–π–≥—É–ª—å –ù—É—Ä–ª–∞–Ω–æ–≤–∞",
        lat: 43.222,
        lng: 76.8512,
        address: "–ê–ª–º–∞—Ç—ã, —É–ª. –ê–±–∞—è 150",
        description:
          "–í–æ–¥–∞ –∏–º–µ–µ—Ç –Ω–µ–ø—Ä–∏—è—Ç–Ω—ã–π –∑–∞–ø–∞—Ö –∏ –º—É—Ç–Ω—ã–π —Ü–≤–µ—Ç. –ü—Ä–æ–±–ª–µ–º–∞ –Ω–∞–±–ª—é–¥–∞–µ—Ç—Å—è —É–∂–µ –Ω–µ–¥–µ–ª—é. –î–µ—Ç–∏ –æ—Ç–∫–∞–∑—ã–≤–∞—é—Ç—Å—è –ø–∏—Ç—å –≤–æ–¥—É –∏–∑-–ø–æ–¥ –∫—Ä–∞–Ω–∞.",
        status: "pending",
      },
      {
        user_id: userId,
        name: "–ï—Ä–ª–∞–Ω –ö–∞—Å—ã–º–æ–≤",
        lat: 51.1694,
        lng: 71.4491,
        address: "–ù—É—Ä-–°—É–ª—Ç–∞–Ω, —É–ª. –ö–µ–Ω–µ—Å–∞—Ä—ã 40",
        description:
          "–ù–∏–∑–∫–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ –≤–æ–¥—ã, –∏–Ω–æ–≥–¥–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–¥–∞—á–∞. –û—Å–æ–±–µ–Ω–Ω–æ –ø—Ä–æ–±–ª–µ–º–∞—Ç–∏—á–Ω–æ –≤ —É—Ç—Ä–µ–Ω–Ω–∏–µ –∏ –≤–µ—á–µ—Ä–Ω–∏–µ —á–∞—Å—ã.",
        status: "in_progress",
      },
      {
        user_id: adminId,
        name: "–ì—É–ª—å–Ω–∞—Ä–∞ –ê–±–¥—É–ª–ª–∏–Ω–∞",
        lat: 43.6532,
        lng: 51.1694,
        address: "–ê–∫—Ç–æ–±–µ, —É–ª. –ú–æ–ª–¥–∞–≥—É–ª–æ–≤–æ–π 25",
        description:
          "–í–æ–¥–∞ —Å –ø—Ä–∏–≤–∫—É—Å–æ–º —Ö–ª–æ—Ä–∞, –¥–µ—Ç–∏ –∂–∞–ª—É—é—Ç—Å—è –Ω–∞ –±–æ–ª–∏ –≤ –∂–∏–≤–æ—Ç–µ –ø–æ—Å–ª–µ —É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è –≤–æ–¥—ã. –¢—Ä–µ–±—É–µ—Ç—Å—è —Å—Ä–æ—á–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞.",
        status: "resolved",
      },
      {
        user_id: userId,
        name: "–ê—Å—Ö–∞—Ç –ñ—É–º–∞–±–µ–∫–æ–≤",
        lat: 50.2833,
        lng: 57.1667,
        address: "–ü–µ—Ç—Ä–æ–ø–∞–≤–ª–æ–≤—Å–∫, —É–ª. –ö–æ–Ω—Å—Ç–∏—Ç—É—Ü–∏–∏ 15",
        description:
          "–†–∂–∞–≤–∞—è –≤–æ–¥–∞ —Ç–µ—á–µ—Ç –∏–∑ –∫—Ä–∞–Ω–æ–≤ —É–∂–µ —Ç—Ä–µ—Ç–∏–π –¥–µ–Ω—å. –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –ø–∏—Ç—å—è –∏ –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è –ø–∏—â–∏.",
        status: "pending",
      },
      {
        user_id: adminId,
        name: "–î–∏–Ω–∞—Ä–∞ –°–∞–≥—ã–Ω–¥—ã–∫–æ–≤–∞",
        lat: 42.3417,
        lng: 69.59,
        address: "–®—ã–º–∫–µ–Ω—Ç, —É–ª. –ë–∞–π—Ç—É—Ä—Å—ã–Ω–æ–≤–∞ 89",
        description: "–ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ –æ—Ç–∫–ª—é—á–∞–µ—Ç—Å—è –≤–æ–¥–æ—Å–Ω–∞–±–∂–µ–Ω–∏–µ –±–µ–∑ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è. –ì—Ä–∞—Ñ–∏–∫ –ø–æ–¥–∞—á–∏ –≤–æ–¥—ã –Ω–µ —Å–æ–±–ª—é–¥–∞–µ—Ç—Å—è.",
        status: "in_progress",
      },
    ]

    for (const complaint of testComplaints) {
      await query(
        `INSERT INTO complaints (user_id, name, location_lat, location_lng, location_address, description, status) 
         VALUES ($1, $2, $3, $4, $5, $6, $7)`,
        [
          complaint.user_id,
          complaint.name,
          complaint.lat,
          complaint.lng,
          complaint.address,
          complaint.description,
          complaint.status,
        ],
      )
    }
    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π
    console.log("–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π...")
    await query(`INSERT INTO updates (title, description) VALUES ($1, $2)`, [
      "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã",
      "–ú—ã –æ–±–Ω–æ–≤–∏–ª–∏ —Å–∏—Å—Ç–µ–º—É –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏ –∏ —Å–∫–æ—Ä–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç—ã.",
    ])
    await query(`INSERT INTO updates (title, description) VALUES ($1, $2)`, [
      "–ù–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏",
      "–î–æ–±–∞–≤–ª–µ–Ω—ã –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∂–∞–ª–æ–±.",
    ])

    // –°–æ–∑–¥–∞–Ω–∏–µ —Ç—Ä–∏–≥–≥–µ—Ä–∞ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è updated_at
    console.log("‚ö° –°–æ–∑–¥–∞–Ω–∏–µ —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤...")
    await query(`
      CREATE OR REPLACE FUNCTION update_updated_at_column()
      RETURNS TRIGGER AS $$
      BEGIN
        NEW.updated_at = CURRENT_TIMESTAMP;
        RETURN NEW;
      END;
      $$ language 'plpgsql';
    `)

    await query(`
      CREATE TRIGGER update_users_updated_at 
      BEFORE UPDATE ON users 
      FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();
    `)

    await query(`
      CREATE TRIGGER update_complaints_updated_at 
      BEFORE UPDATE ON complaints 
      FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();
    `)

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    const userCount = await query("SELECT COUNT(*) as count FROM users")
    const complaintCount = await query("SELECT COUNT(*) as count FROM complaints")
    const updateCount = await query("SELECT COUNT(*) as count FROM updates")

    console.log("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞!")
    console.log(`üë• –°–æ–∑–¥–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${userCount[0].count}`)
    console.log(`üìã –°–æ–∑–¥–∞–Ω–æ –∂–∞–ª–æ–±: ${complaintCount[0].count}`)
    console.log(`üì∞ –°–æ–∑–¥–∞–Ω–æ –Ω–æ–≤–æ—Å—Ç–µ–π: ${updateCount[0].count}`)
    console.log("")
    console.log("üîë –¢–µ—Å—Ç–æ–≤—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã:")
    console.log("   –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: admin@tazasu.kz / admin123")
    console.log("   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: user@test.com / user123")
    console.log("")
    console.log("üöÄ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä: npm run dev")

    process.exit(0)
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:", error)
    process.exit(1)
  }
}

initDatabase()
